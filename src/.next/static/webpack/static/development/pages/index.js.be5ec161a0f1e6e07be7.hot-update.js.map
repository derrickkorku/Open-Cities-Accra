{"version":3,"file":"static/webpack/static/development/pages/index.js.be5ec161a0f1e6e07be7.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { Component } from \"react\";\nimport Link from \"next/link\";\nimport ReactMapGL, { NavigationControl, Marker, Popup, } from \"react-map-gl\";\nimport {fromJS} from \"immutable\"\nconst navStyle = {\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  padding: \"20px\"\n};\nimport fetch from \"isomorphic-unfetch\";\n//const base_url =\"https://ocav1-app.herokuapp.com\" || \"http://localhost:5000\"  \nconst base_url = \"http://localhost:5000\" || \"https://ocav1-app.herokuapp.com\" \n\nconst mapStyle = fromJS({\n  version: 8,\n  style: 'mapbox://styles/mapbox/streets-v9',\n  sources: {\n      building: {\n          type: 'geojson',\n          data:  base_url + \"/static/data/alobgoshie-buildings.geojson\", \n      },   \n         water: {\n        type: 'geojson',\n        data:  base_url + \"/static/data/alogboshie_waterways.geojson\", \n    }\n  },\n  layers: [\n      {\n          id: 'my-layer',\n          source: 'building',\n          type: \"fill\",\n          'paint': {\n       \"fill-color\":\"gray\"\n            }\n      \n      },\n      {\n        id: 'm-layer',\n        source: 'water',\n        type: \"line\",\n        'paint': {\n     \"line-color\":\"blue\",\n     \"line-width\":3\n          }\n\n    \n    }\n  ]\n});\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      floodData:null,\n      buildingData:null,\n      drainageData:null,\n      render:false,\n      viewport: {\n        width: \"inherit\",\n        height: \"inherit\",\n        latitude: 5.62420,\n        longitude: -0.23250,\n       \n        zoom: 15.6\n      },\n      popupInfo: null,\n      floodPopupInfo:null,\n      placeInfo: null,\n      floodPlaceInfo:null\n    };\n    this.renderPopup = this.renderPopup.bind(this);\n  }\n\n \n\n\n\n  componentDidMount(){\n    this.setState({render:true})\n    //   fetch(\n    //     base_url + \"/static/data/derrick.json\"\n    //  ).then(buildingsRes=>buildingsRes.json() ).then(buildingData=>{this.setState({buildingData})\n    //     })\n\n    //       fetch(\n    //       base_url + \"/static/data/alogboshie_waterways.geojson\"\n    //      ).then(drainageRes=>drainageRes.json() ).then(drainageData=>{this.setState({drainageData})\n    //         })\n\n    //         fetch(\n    //           base_url + \"/static/data/alogboshie_flod_history.geojson\"\n    //         ).then(floodRes=>floodRes.json() ).then(floodData=>{this.setState({floodData})\n    //            })\n   \n     \n   }\n\n  renderPopup() {\n    console.log(this.state.placeInfo);\n    return (\n      this.state.popupInfo && (\n        <Popup\n          tipSize={10}\n          anchor=\"bottom-right\"\n          longitude={this.state.popupInfo.state.longitude}\n          latitude={this.state.popupInfo.state.latitude}\n          onClose={() => this.setState({ popupInfo: null })}\n          closeOnClick={true}\n        >\n          <table width=\"300\">\n            <tbody>\n              <tr>\n                <th>Community</th>\n                <td style={{ paddingLeft: \"5px\" }}>\n                  {this.state.placeInfo.community}\n                </td>\n              </tr>\n              <tr>\n                <th tyle={{ width: \"80px\" }}>Building material</th>\n                <td style={{ paddingLeft: \"5px\" }}>\n                  {this.state.placeInfo.building_material}\n                </td>\n              </tr>\n              <tr>\n                <th>Roof material</th>\n                <td style={{ paddingLeft: \"5px\" }}>\n                  {this.state.placeInfo.roof_material}\n                </td>\n              </tr>\n              <tr>\n                <th>Building</th>\n                <td style={{ paddingLeft: \"5px\" }}>\n                  {this.state.placeInfo.building}\n                </td>\n              </tr>\n              <tr>\n                <th>suburb</th>\n                <td style={{ paddingLeft: \"5px\" }}>\n                  {this.state.placeInfo.suburb}\n                </td>\n              </tr>\n              <tr>\n                <th>street</th>\n                <td style={{ paddingLeft: \"5px\" }}>\n                  {this.state.placeInfo.street}\n                </td>\n              </tr>\n              <tr>\n                <th>City</th>\n                <td style={{ paddingLeft: \"5px\" }}>\n                  {this.state.placeInfo.city}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </Popup>\n      )\n    );\n  }\n\n  renderFloodPopup() {\n    \n    return (\n      this.state.floodPopupInfo && (\n        <Popup\n          tipSize={10}\n          anchor=\"bottom-right\"\n          longitude={this.state.floodPopupInfo.state.longitude}\n          latitude={this.state.floodPopupInfo.state.latitude}\n          onClose={() => this.setState({ floodPopupInfo: null })}\n          closeOnClick={true}\n        >\n          <table width=\"400\">\n            <tbody>\n              <tr>\n                <th>experienced_flood</th>\n                <td style={{ paddingLeft: \"5px\" }}>\n                  {this.state.floodPlaceInfo.experienced_flood}\n                </td>\n              </tr>\n              <tr>\n                <th tyle={{ width: \"80px\" }}>suburb</th>\n                <td style={{ paddingLeft: \"5px\" }}>\n                  {this.state.floodPlaceInfo.suburb}\n                </td>\n              </tr>\n              <tr>\n                <th>flood_cause</th>\n                <td style={{ paddingLeft: \"5px\" }}>\n                  {this.state.floodPlaceInfo.flood_cause}\n                </td>\n              </tr>\n              <tr>\n                <th>flood_year</th>\n                <td style={{ paddingLeft: \"5px\" }}>\n                  {this.state.floodPlaceInfo.flood_year}\n                </td>\n              </tr>\n              <tr>\n                <th>dwelling_type</th>\n                <td style={{ paddingLeft: \"5px\" }}>\n                  {this.state.floodPlaceInfo.dwelling_type}\n                </td>\n              </tr>\n              <tr>\n                <th>flood_depth</th>\n                <td style={{ paddingLeft: \"5px\" }}>\n                  {this.state.floodPlaceInfo.flood_depth}\n                </td>\n              </tr>\n              <tr>\n                <th>landmark</th>\n                <td style={{ paddingLeft: \"5px\" }}>\n                  {this.state.floodPlaceInfo.landmark}\n                </td>\n              </tr>\n              <tr>\n                <th>moved_house</th>\n                <td style={{ paddingLeft: \"5px\" }}>\n                  {this.state.floodPlaceInfo.moved_house}\n                </td>\n              </tr>\n            {\n                this.state.floodPlaceInfo.moved_house ===\"yes\" &&\n                <tr>\n                <th>moved_year</th>\n                <td style={{ paddingLeft: \"5px\" }}>\n                  {this.state.floodPlaceInfo.moved_year}\n                </td>\n              </tr>\n              }\n\n            </tbody>\n          </table>\n        </Popup>\n      )\n    );\n  }\n\n  render() {\n\n    const myMap =this.state.render && this.mapRef.getMap()\n    this.state.render && myMap.on(\"load\", function () {\n        // Add a layer showing the state polygons.\n        myMap.addLayer({\n        'id': 'states-layers',\n        'type': 'fill',\n        'source': {\n        'type': 'geojson',\n        'data': base_url + \"/static/data/alobgoshie-buildings.geojson\"\n        },\n        'layout': {},\n        'paint': {\n        'fill-color': '#088',\n        'fill-opacity': 0.2\n        }\n        });\n\n        myMap.addLayer({\n          'id': 'states-layer',\n          'type': 'line',\n          'source': {\n          'type': 'geojson',\n          'data': base_url + \"/static/data/alogboshie_waterways.geojson\"\n          },\n          'paint': {\n                  \"line-color\":\"blue\",\n                  \"line-width\":3\n                         }\n          });\n      \n    })\n    return (\n      <div>\n        <div className=\"container-fluid mt-3 mr-10 ml-10\">\n          <div className=\"row\">\n            <div className=\"col-sm-3\" style={{ marginTop: \"0.8em\" }}>\n              <center>\n                <Link href=\"/\">\n                  <a className=\"home-link\">HOME</a>\n                </Link>\n              </center>\n            </div>\n            <div className=\"col-sm-9\">\n            <div className=\"row\">\n            <div className=\"col-md-2\"></div>\n            <div className=\"col-sm-6\">\n              <h4 className=\"font-weight-bold\">ALOGBOSHIE</h4>\n              </div>\n              <div className=\"col-sm-4\">\n         \n                <select className=\"form-control mb-3 mr-3 w-100 rounded\" disabled>\n                  <option>-- Select Community --</option>\n                  <option>Akweteyman</option>\n                  <option selected>Alogboshie</option>\n                  <option>Alajo</option>\n                  <option>Nima</option>\n                </select>\n          \n           \n              </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row index-pg\">\n            <div className=\"col-sm-3\">\n              <ul className=\"list-unstyled px-3 py-3 rounded bg-sidebar shadow\">\n                <li className=\"mb-3\">\n                  <Link href=\"/buildings\">\n                    <a className=\"btn btn-lg btn-block btn-light rounded p-home-btn\">\n                      <i className=\"fas fa-home fa-2x fa-color\" />\n                      <br />\n                      Building\n                    </a>\n                  </Link>\n                </li>\n                <li className=\"mb-3\">\n                  <Link href=\"/flood-history\">\n                    <a className=\"btn btn-lg btn-block btn-light rounded p-home-btn\">\n                      <i className=\"fab fa-fort-awesome-alt fa-2x fa-color\" />\n                      <br />\n                      Flood History\n                    </a>\n                  </Link>\n                </li>\n                <li className=\"\">\n                  <Link href=\"/drainage\">\n                    <a className=\"btn btn-lg btn-block btn-lg btn-light rounded p-home-btn\">\n                      <i className=\"fab fa-schlix fa-2x fa-color\" />\n                      <br />\n                      Drainage Points\n                    </a>\n                  </Link>\n                </li>\n              </ul>\n              <Link href=\"/contact\">\n                <a className=\"btn btn-dark btn-block\">Contact</a>\n              </Link>\n            </div>\n            <div className=\"col-sm-9\">\n              <div className=\"map-border\" style={{ height: \"700px\" }}>\n                <ReactMapGL\n                  ref={ map => this.mapRef = map }\n                  mapboxApiAccessToken={\n                    \"pk.eyJ1Ijoid2lzZG9tMDA2MyIsImEiOiJjanI1aWg0cGQwZTByM3dtc3J1OHJ3MGNqIn0.yjtKpgtEmgCkCcLvpH_tJg\"\n                  }\n                  {...this.state.viewport}\n                  mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n                  onViewportChange={viewport => this.setState({ viewport })}\n                >\n                  {/* {this.state.buildingData && this.state.buildingData.features.map(value => {\n                    return value.geometry.coordinates.map((val, index) => {\n                      return (\n                        <Marker\n                          latitude={val[index][1]}\n                          longitude={val[index][0]}\n                          key={index}\n                        >\n                          <img\n                            src=\"../static/img/home.png\"\n                         \n                            width=\"20\"\n                            height=\"20\"\n                            onClick={() => {\n                              console.log(\"hhhheheheheh\");\n                              this.setState({\n                                popupInfo: {\n                                  state: {\n                                    longitude: val[index][0],\n                                    latitude: val[index][1]\n                                  }\n                                },\n                                placeInfo: {\n                                  community: value.properties[\"addr:community\"],\n                                  building_material:\n                                    value.properties[\"building:material\"] ||\n                                    null,\n                                  roof_material:\n                                    value.properties[\"roof:material\"] || null,\n                                    street: value.properties[\"addr:street\"] || null,\n                                    suburb:value.properties[\"addr:suburb\"] || null,\n                                    building:value.properties[\"building\"] || null,\n                                    city:value.properties[\"addr:city\"] || null\n\n\n                                }\n                              });\n                            }}\n                          />\n                        </Marker>\n                      );\n                    });\n                  })}\n\n{this.state.drainageData && this.state.drainageData.features.map(value => {\n                    return value.geometry.coordinates.map((val, index) => {\n                      return (\n                        <Marker\n                          latitude={val[1]}\n                          longitude={val[0]}\n                          key={index}\n                        >\n                          <img\n                            src=\"../static/img/river.png\"\n                            width=\"17\"\n                            height=\"17\"\n\n                          />\n                        </Marker>\n                      );\n                    });\n                  })}\n\n{this.state.floodData && this.state.floodData.features.map((value, index)=>{\n                                        return (\n                                          <Marker\n                                            latitude={value.geometry.coordinates[1]}\n                                            longitude={value.geometry.coordinates[0]}\n                                            key={index}\n                                          >\n                                            <img\n                                              src=\"../static/img/flood.png\"\n                                              style={{backgroundColor:\"gray\"}}\n                                              width=\"17\"\n                                              height=\"15\"\n                                              onClick={() => {\n                                              \n                                                this.setState({\n                                                  floodPopupInfo: {\n                                                    state: {\n                                                      longitude: value.geometry.coordinates[0],\n                                                      latitude: value.geometry.coordinates[1]\n                                                    }\n                                                  },\n                                                  floodPlaceInfo: {\n                                                    experienced_flood: value.properties[\"experienced_flood\"],\n                                                    suburb:\n                                                      value.properties[\"address.suburb\"] ||\n                                                      null,\n                                                    flood_cause:\n                                                      value.properties[\"flood_history.flood_cause\"] || null,\n                                                      flood_year:value.properties[\"flood_history.flood_event.flood_year\"] || null,\n                                                      dwelling_type:value.properties[\"dwelling_type\"] || null,\n                                                      flood_depth:value.properties[\"flood_history.flood_depth\"]||null,\n                                                      landmark:value.properties[\"address.landmark\"] || null,\n                                                      moved_house:value.properties[\"moved_house\"] || null,\n                                                      moved_year:value.properties[\"moved_year\"] || null\n                                                  }\n                                                });\n                                              }}\n                                            />\n                                          </Marker>\n                                        )})} */}\n\n                  <div className=\"nav\" style={navStyle}>\n                    <NavigationControl\n                      onViewportChange={viewport => this.setState({ viewport })}\n                    />\n                  </div>\n                  {this.renderPopup()}\n                  {this.renderFloodPopup()}\n                </ReactMapGL>\n              </div>\n            </div>\n          </div>\n        </div>\n        <footer className=\"footer\">\n          <div className=\"container\">\n            <center>Powered by:</center>\n            <div className=\"row justify-content-center\">\n              <ul className=\"list-inline py-2\">\n                <li className=\"list-inline-item\">\n                  <Link href=\"http://mobilewebghana.org/\">\n                    <a target=\"_blank\">\n                      <img\n                        src=\"../static/img/partners/mwg.png\"\n                        className=\"partner\"\n                      />\n                    </a>\n                  </Link>\n                </li>\n                <li className=\"list-inline-item\">\n                  <Link href=\"https://www.osmghana.org/\">\n                    <a target=\"_blank\">\n                      <img\n                        src=\"../static/img/partners/osmghana.png\"\n                        className=\"partner\"\n                      />\n                    </a>\n                  </Link>\n                </li>\n                <li className=\"list-inline-item\">\n                  <Link href=\"https://www.hotosm.org/\">\n                    <a target=\"_blank\">\n                      <img\n                        src=\"../static/img/partners/hot.png\"\n                        className=\"partner\"\n                      />\n                    </a>\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AAEA;AACA;AACA;AACA;AACA;AADA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAvBA;AACA;AAmCA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AANA;AAQA;AACA;AACA;AACA;AAhBA;AAkBA;AApBA;AAqBA;AACA;;;AAKA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;AAEA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AARA;AAcA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAPA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiaA;;;;AA1cA;AACA;AA4cA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}