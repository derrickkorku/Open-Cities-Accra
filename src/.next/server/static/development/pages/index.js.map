{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/footer.js","webpack:///./pages/index.js","webpack:///external \"next/dynamic\"","webpack:///external \"next/link\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import Link from \"next/link\";\n\nexport default ()=>(\n    <footer className=\"footer\">\n    <div className=\"container\">\n      <center>Powered by:</center>\n      <div className=\"row justify-content-center\">\n        <ul className=\"list-inline py-2\">\n          <li className=\"list-inline-item\">\n            <Link href=\"http://mobilewebghana.org/\">\n              <a target=\"_blank\">\n                <img\n                  src=\"../static/img/partners/mwg.png\"\n                  className=\"partner\"\n                />\n              </a>\n            </Link>\n          </li>\n          <li className=\"list-inline-item\">\n            <Link href=\"https://www.osmghana.org/\">\n              <a target=\"_blank\">\n                <img\n                  src=\"../static/img/partners/osmghana-logo.png\"\n                  className=\"hot\"\n                />\n              </a>\n            </Link>\n          </li>\n          <li className=\"list-inline-item\">\n            <Link href=\"https://www.hotosm.org/\">\n              <a target=\"_blank\" style={{ width: \"800px !important\" }}>\n                <img src=\"../static/img/hot.png\" className=\"hot\" />\n              </a>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </footer>\n)","import { Component } from \"react\";\nimport Link from \"next/link\";\nimport Footer from \"../components/footer\";\nimport dynamic from 'next/dynamic'\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading:false,\n      floodData: null,\n      buildingData: null,\n      drainageData: null,\n      render: false,\n      title:\n        \"Map Visualisation of buildings, flood history, and drainage for Alogboshie, Accra-Ghana\",\n      community: \"Alobgoshie\",\n      buildings: \"alobgoshie-buildings.geojson\",\n      waterways: \"alogboshie_waterways.geojson\",\n      flood: \"alogboshie_flod_history .geojson\",\n      center: [-0.2325, 5.6262]\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ render: true });\n    mapboxgl.accessToken =\n      \"pk.eyJ1Ijoid2lzZG9tMDA2MyIsImEiOiJjanI1aWg0cGQwZTByM3dtc3J1OHJ3MGNqIn0.yjtKpgtEmgCkCcLvpH_tJg\";\n  }\n\n\n  render() {\n    let buildingurl = this.state.render && this.state.buildings;\n    let waterwaysurl = this.state.render && this.state.waterways;\n    let floodurl = this.state.render && this.state.flood;\n    let center = this.state.render && this.state.center;\n\n    var map =\n      this.state.render &&\n      new mapboxgl.Map({\n        container: \"map\",\n        style: \"mapbox://styles/mapbox/streets-v9\",\n        zoom: 17.3,\n        center: center\n      });\n\n    this.state.render && map.addControl(new mapboxgl.NavigationControl());\n\n    this.state.render &&\n      map.on(\"load\", function() {\n        // Add a layer showing the state polygons.\n        map.addLayer({\n          id: \"buildings\",\n          type: \"fill\",\n          source: {\n            type: \"geojson\",\n            data: `/static/data/${buildingurl}`\n          },\n          layout: {},\n          paint: {\n            \"fill-color\": \"#088\",\n            \"fill-opacity\": 0.2,\n            \"fill-outline-color\": \"red\"\n          }\n        });\n\n        // When a click event occurs on a feature in the states layer, open a popup at the\n        // location of the click, with description HTML from its properties.\n        map.on(\"click\", \"buildings\", function(e) {\n          new mapboxgl.Popup()\n            .setLngLat(e.lngLat)\n            .setHTML(\n              `\n  <table width=\"300\">\n  <tbody>\n  ${(e.features[0].properties[\"name\"] &&\n    `<tr>\n    <th>Name</th>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"name\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n    ${(e.features[0].properties[\"addr:community\"] &&\n      `<tr>\n      <th>Community</th>\n      <td style={{ paddingLeft: \"5px\" }}>\n      ${e.features[0].properties[\"addr:community\"]}\n      </td>\n      </tr>`) ||\n      \"\"}\n\n    ${(e.features[0].properties[\"building:material\"] &&\n      `<tr>\n      <th>Building material</th>\n      <td style={{ paddingLeft: \"5px\" }}>\n      ${e.features[0].properties[\"building:material\"]}\n      </td>\n      </tr>`) ||\n      \"\"}\n    ${(e.features[0].properties[\"roof:material\"] &&\n      `<tr>\n      <th>Roof material</th>\n      <td style={{ paddingLeft: \"5px\" }}>\n      ${e.features[0].properties[\"roof:material\"]}\n      </td>\n      </tr>`) ||\n      \"\"}\n\n  ${(e.features[0].properties[\"addr:street\"] &&\n    `<tr>\n    <th>Street</th>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"addr:street\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n\n  ${(e.features[0].properties[\"addr:city\"] &&\n    `<tr>\n    <th>City</th>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"addr:city\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n\n\n  ${(e.features[0].properties[\"addr:suburb\"] &&\n    `<tr>\n    <th>Suburb</th>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"addr:suburb\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n\n  ${(e.features[0].properties[\"addr:amenity\"] &&\n    `<tr>\n    <th>Amenity</th>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"addr:amenity\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n\n\n${(e.features[0].properties[\"religion\"] &&\n  `<tr>\n  <th>Religion</th>\n  <td style={{ paddingLeft: \"5px\" }}>\n  ${e.features[0].properties[\"religion\"]}\n  </td>\n  </tr>`) ||\n  \"\"}\n\n${(e.features[0].properties[\"building\"] &&\n  `<tr>\n  <th>Building</th>\n  <td style={{ paddingLeft: \"5px\" }}>\n  ${e.features[0].properties[\"building\"]}\n  </td>\n  </tr>`) ||\n  \"\"}\n\n${(e.features[0].properties[\"denomination\"] &&\n  `<tr>\n  <th>Denomination</th>\n  <td style={{ paddingLeft: \"5px\" }}>\n  ${e.features[0].properties[\"denomination\"]}\n  </td>\n  </tr>`) ||\n  \"\"}\n\n${(e.features[0].properties[\"source\"] &&\n  `<tr>\n  <th>Source</th>\n  <td style={{ paddingLeft: \"5px\" }}>\n  ${e.features[0].properties[\"source\"]}\n  </td>\n  </tr>`) ||\n  \"\"}\n    </tbody>\n    </table>`\n            )\n            .addTo(map);\n        });\n\n        // Change the cursor to a pointer when the mouse is over the states layer.\n        map.on(\"mouseenter\", \"buildings\", function() {\n          map.getCanvas().style.cursor = \"pointer\";\n        });\n\n        // Change it back to a pointer when it leaves.\n        map.on(\"mouseleave\", \"buildings\", function() {\n          map.getCanvas().style.cursor = \"\";\n        });\n\n        map.addLayer({\n          id: \"drainage\",\n          type: \"line\",\n          source: {\n            type: \"geojson\",\n            data: `/static/data/${waterwaysurl}`\n          },\n          paint: {\n            \"line-color\": \"blue\",\n            \"line-width\": 3\n          }\n        });\n\n        // When a click event occurs on a feature in the states layer, open a popup at the\n        // location of the click, with description HTML from its properties.\n        map.on(\"click\", \"drainage\", function(e) {\n          new mapboxgl.Popup()\n            .setLngLat(e.lngLat)\n            .setHTML(\n              `\n  <table width=\"350\">\n  <tbody>\n  ${(e.features[0].properties[\"width\"] &&\n    `<tr>\n    <th>Width</th>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"width\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n  ${(e.features[0].properties[\"waterway\"] &&\n    `<tr>\n    <th>Waterway</th>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"waterway\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n\n  ${(e.features[0].properties[\"depth\"] &&\n    `<tr>\n    <th>Depth</th>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"depth\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n    ${(e.features[0].properties[\"drain:cover_type\"] &&\n      `<tr>\n      <th>Cover Type</th>\n      <td style={{ paddingLeft: \"5px\" }}>\n      ${e.features[0].properties[\"drain:cover_type\"]}\n      </td>\n      </tr>`) ||\n      \"\"}\n\n    ${(e.features[0].properties[\"drain:ele\"] &&\n      `<tr>\n      <th>Ele</th>\n      <td style={{ paddingLeft: \"5px\" }}>\n      ${e.features[0].properties[\"drain:ele\"]}\n      </td>\n      </tr>`) ||\n      \"\"}\n    ${(e.features[0].properties[\"drain:material\"] &&\n      `<tr>\n      <th>Drain material</th>\n      <td style={{ paddingLeft: \"5px\" }}>\n      ${e.features[0].properties[\"drain:material\"]}\n      </td>\n      </tr>`) ||\n      \"\"}\n\n  ${(e.features[0].properties[\"drain:material_smoothness\"] &&\n    `<tr>\n    <th>Material Smoothnes</th>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"drain:material_smoothness\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n\n  ${(e.features[0].properties[\"drain:profile_covered\"] &&\n    `<tr>\n    <th>Profile Covered</th>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"drain:profile_covered\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n\n\n  ${(e.features[0].properties[\"drain:profile_open\"] &&\n    `<tr>\n    <th>Profile Open</th>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"drain:profile_open\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n\n  ${(e.features[0].properties[\"layer\"] &&\n    `<tr>\n    <th>Layer</th>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"layer\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n\n\n${(e.features[0].properties[\"reference:feature\"] &&\n  `<tr>\n  <th>Reference Feature</th>\n  <td style={{ paddingLeft: \"5px\" }}>\n  ${e.features[0].properties[\"reference:feature\"]}\n  </td>\n  </tr>`) ||\n  \"\"}\n\n${(e.features[0].properties[\"reference:feature_type\"] &&\n  `<tr>\n  <th>Reference Feature Type</th>\n  <td style={{ paddingLeft: \"5px\" }}>\n  ${e.features[0].properties[\"reference:feature_type\"]}\n  </td>\n  </tr>`) ||\n  \"\"}\n${(e.features[0].properties[\"description\"] &&\n  `<tr>\n  <th>Description</th>\n  <td style={{ paddingLeft: \"5px\" }}>\n  ${e.features[0].properties[\"description\"]}\n  </td>\n  </tr>`) ||\n  \"\"}\n\n${(e.features[0].properties[\"drain:point_feature\"] &&\n  `<tr>\n  <th>Point Feature</th>\n  <td style={{ paddingLeft: \"5px\" }}>\n  ${e.features[0].properties[\"drain:point_feature\"]}\n  </td>\n  </tr>`) ||\n  \"\"}\n\n${(e.features[0].properties[\"tunnel\"] &&\n  `<tr>\n  <th>Point Feature</th>\n  <td style={{ paddingLeft: \"5px\" }}>\n  ${e.features[0].properties[\"tunnel\"]}\n  </td>\n  </tr>`) ||\n  \"\"}\n\n\n${(e.features[0].properties[\"source\"] &&\n  `<tr>\n  <th>Source</th>\n  <td style={{ paddingLeft: \"5px\" }}>\n  ${e.features[0].properties[\"source\"]}\n  </td>\n  </tr>`) ||\n  \"\"}\n    </tbody>\n    </table>`\n            )\n            .addTo(map);\n        });\n\n        // Change the cursor to a pointer when the mouse is over the states layer.\n        map.on(\"mouseenter\", \"drainage\", function() {\n          map.getCanvas().style.cursor = \"pointer\";\n        });\n\n        // Change it back to a pointer when it leaves.\n        map.on(\"mouseleave\", \"drainage\", function() {\n          map.getCanvas().style.cursor = \"\";\n        });\n\n        map.addLayer({\n          id: \"flood\",\n          type: \"circle\",\n          source: {\n            type: \"geojson\",\n            data: `/static/data/${floodurl}`\n          },\n          paint: {\n            \"circle-color\": /* other */ \"rgb(128, 128, 128)\",\n\n            \"circle-radius\": 10\n          }\n        });\n\n        map.on(\"click\", \"flood\", function(e) {\n          new mapboxgl.Popup()\n            .setLngLat(e.lngLat)\n            .setHTML(\n              `\n<table width=\"350\">\n<tbody>\n${(e.features[0].properties[\"experienced_flood\"] &&\n  `<tr>\n  <th>experienced flood</th>\n  <td style={{ paddingLeft: \"5px\" }}>\n  ${e.features[0].properties[\"experienced_flood\"]}\n  </td>\n  </tr>`) ||\n  \"\"}\n${(e.features[0].properties[\"flood_history.flood_cause\"] &&\n  `<tr>\n  <th>Flood Cause</th>\n  <td style={{ paddingLeft: \"5px\" }}>\n  ${e.features[0].properties[\"flood_history.flood_cause\"]}\n  </td>\n  </tr>`) ||\n  \"\"}\n\n${(e.features[0].properties[\"flood_history.flood_event.flood_year\"] &&\n  `<tr>\n  <th>Flood Year</th>\n  <td style={{ paddingLeft: \"5px\" }}>\n  ${e.features[0].properties[\"flood_history.flood_event.flood_year\"]}\n  </td>\n  </tr>`) ||\n  \"\"}\n  ${(e.features[0].properties[\"dwelling_type\"] &&\n    `<tr>\n    <th>Dwelling Type</th>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"dwelling_type\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n\n  ${(e.features[0].properties[\"building_use\"] &&\n    `<tr>\n    <th>Building Use</th>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"building_use\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n\n  ${(e.features[0].properties[\"years_in_house\"] &&\n    `<tr>\n    <th>Years in house </Useth>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"years_in_house\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n\n  ${(e.features[0].properties[\"flood_history.flood_depth\"] &&\n    `<tr>\n    <th>Flood Depth</th>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"flood_history.flood_depth\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n  ${(e.features[0].properties[\"address.landmark\"] &&\n    `<tr>\n    <th>Land Mark</th>\n    <td style={{ paddingLeft: \"5px\" }}>\n    ${e.features[0].properties[\"address.landmark\"]}\n    </td>\n    </tr>`) ||\n    \"\"}\n\n${(e.features[0].properties[\"moved_house\"] &&\n  `<tr>\n  <th>Moved House</th>\n  <td style={{ paddingLeft: \"5px\" }}>\n  ${e.features[0].properties[\"moved_house\"]}\n  </td>\n  </tr>`) ||\n  \"\"}\n\n${(e.features[0].properties[\"moved_year\"] &&\n  `<tr>\n  <th>Moved Year</th>\n  <td style={{ paddingLeft: \"5px\" }}>\n  ${e.features[0].properties[\"moved_year\"]}\n  </td>\n  </tr>`) ||\n  \"\"}\n  </tbody>\n  </table>`\n            )\n            .addTo(map);\n        });\n\n        // Change the cursor to a pointer when the mouse is over the states layer.\n        map.on(\"mouseenter\", \"flood\", function() {\n          map.getCanvas().style.cursor = \"pointer\";\n        });\n\n        // Change it back to a pointer when it leaves.\n        map.on(\"mouseleave\", \"flood\", function() {\n          map.getCanvas().style.cursor = \"\";\n        });\n      });\n    return (\n      <div>\n        <div className=\"container-fluid mt-3 mr-10 ml-10\">\n          <div className=\"row\" style={{ minHeight: \"6vh\" }}>\n            <div className=\"col-sm-4\" style={{ marginTop: \"0.8em\" }}>\n              <center>\n                <Link href=\"/\">\n                  <a className=\"home-link\">Open Cities Accra Data Visualizations</a>\n                </Link>\n              </center>\n            </div>\n            <div className=\"col-sm-8\">\n              <div className=\"row\">\n                <div className=\"col-sm-9\">\n                  <h4>\n                    <small className=\"font-weight-bold\">\n                      {this.state.title}\n                    </small>\n                  </h4>\n                </div>\n                <div className=\"col-sm-3\">\n                  <select\n                    className=\"form-control mb-3 mr-3 w-100 rounded\"\n                    onChange={e => {\n                      if (e.target.value === \"Akweteyman\") {\n                        this.setState({\n                          title:\n                            \"Map Visualisation of buildings and drainage for Akweteyman, Accra-Ghana\",\n                          community: e.target.value,\n                          buildings: \"akweteyman_buildings.geojson\",\n                          waterways: \"akweteyman_waterways.geojson\",\n                          flood: null,\n                          center: [-0.23843433907319422, 5.613465574220044]\n                        });\n                      } else {\n                        if (e.target.value === \"Alogboshie\") {\n                          this.setState({\n                            title:\n                              \"Map Visualisation of buildings, flood history and drainage for Alobgoshie, Accra-Ghana\",\n\n                            community: e.target.value,\n                            buildings: \"alobgoshie-buildings.geojson\",\n                            waterways: \"alogboshie_waterways.geojson\",\n                            flood: \"alogboshie_flod_history .geojson\",\n                            center: [-0.2325, 5.6262]\n                          });\n                        } else {\n                          if (e.target.value === \"Alajo\") {\n                            this.setState({\n                              title:\n                                \"Map Visualisation of buildings for Alajo, Accra-Ghana\",\n\n                              community: e.target.value,\n                              buildings: \"alajo_buildings.geojson\",\n                              waterways: null,\n                              flood: null,\n                              center: [-0.2152084488221533, 5.598973832979908]\n                            });\n                          } else {\n                            return;\n                          }\n                        }\n                      }\n                    }}\n                  >\n                    <option>-- Select Community --</option>\n                    <option value=\"Alogboshie\" selected>\n                      Alogboshie\n                    </option>\n                    <option value=\"Akweteyman\">Akweteyman</option>\n                    <option value=\"Alajo\">Alajo</option>\n                    {/* <option value=\"Nima\">Nima</option> */}\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row index-pg\">\n            <div className=\"col-sm-4\">\n            <div className=\"bg-sidebar\">\n              <div className=\"info\">\n                This web application was developed as part of the Open Cities\n                Accra project. The project sought to collect and curate\n                up-to-date and accurate geospatial data in the following areas\n                of interest in Accra: Akweteyman, Alajo, Alogboshie and Nima.\n                This web application was developed as a data tool to help\n                government agencies, institutions and other stakeholders working\n                in the Disaster Risk Management field take data-driven decisions\n                in their work. The maps display the following data - buildings,\n                flood history and drainage.\n              </div>\n              <div style={{ marginTop: \"30px\" }} />\n\n              <div className=\" row py-2 mx-1 rounded shadow\">\n                <div className=\"col-sm-4\">\n                  <Link href=\"/buildings\">\n                    <a\n                      className=\"btn btn-md btn-block btn-light rounded\"\n                      style={{ height: \"100%\" }}\n                    >\n                      <i className=\"fas fa-home fa-2x fa-color\" />\n                      <br />\n                      Building\n                    </a>\n                  </Link>\n                </div>\n                <div className=\"mb-1 col-sm-4\">\n                  <Link href=\"/flood-history\">\n                    <a\n                      className=\"btn btn-md btn-block btn-light rounded\"\n                      style={{ height: \"100%\" }}\n                    >\n                      <i className=\"fab fa-fort-awesome-alt fa-2x fa-color\" />\n                      <br />\n                      Flood History\n                    </a>\n                  </Link>\n                </div>\n                <div className=\"col-sm-4\">\n                  <Link href=\"/drainage\">\n                    <a\n                      className=\"btn btn-block btn-md btn-light rounded\"\n                      style={{ height: \"100%\" }}\n                    >\n                      <i className=\"fab fa-schlix fa-2x fa-color\" />\n                      <br />\n                      Drainage Points\n                    </a>\n                  </Link>\n                </div>\n              </div>\n              </div>\n              <div style={{ clear: \"both\", marginTop: \"30px\" }} />\n              <Link href=\"/contact\">\n                <a\n                  className=\"btn btn-dark btn-block\"\n                  style={{ width: \"60%\", marginLeft: \"20%\" }}\n                >\n                  Contact\n                </a>\n              </Link>\n\n              <Footer />\n\n              {/* <ul className=\"list-unstyled px-3 py-3 rounded bg-sidebar shadow\">\n                <li className=\"mb-3\" style={{float:\"left\"}}>\n                  <Link href=\"/buildings\">\n                    <a className=\"btn btn-lg btn-block btn-light rounded p-home-btn\">\n                      <i className=\"fas fa-home fa-2x fa-color\" />\n                      <br />\n                      Building\n                    </a>\n                  </Link>\n                </li>\n                <li className=\"mb-3\" style={{float:\"left\"}}>\n                  <Link href=\"/flood-history\">\n                    <a className=\"btn btn-lg btn-block btn-light rounded p-home-btn\">\n                      <i className=\"fab fa-fort-awesome-alt fa-2x fa-color\" />\n                      <br />\n                      Flood History\n                    </a>\n                  </Link>\n                </li>\n                <li className=\"\" style={{float:\"left\"}}>\n                  <Link href=\"/drainage\">\n                    <a className=\"btn btn-lg btn-block btn-lg btn-light rounded p-home-btn\">\n                      <i className=\"fab fa-schlix fa-2x fa-color\" />\n                      <br />\n                      Drainage Points\n                    </a>\n                  </Link>\n                </li>\n              </ul>\n              <div style={{clear:\"both\"}}/>\n              <Link href=\"/contact\">\n                <a className=\"btn btn-dark btn-block\">Contact</a>\n              </Link> */}\n            </div>\n\n            <div className=\"col-sm-8\">\n              <div\n                className=\"map-border\"\n                style={{ height: \"90vh\", width: \"100%\" }}\n              >\n                <div id=\"map\" />\n                <div id=\"state-legend\" class=\"legend\">\n                  <h4 />\n                  {this.state.buildings && (\n                    <div>\n                      <span style={{ backgroundColor: \"#088\" }} />\n                      Buildings\n                    </div>\n                  )}\n                  {this.state.waterways && (\n                    <div>\n                      <span style={{ backgroundColor: \"blue\" }} />\n                      Drainage\n                    </div>\n                  )}\n                  {this.state.flood && (\n                    <div>\n                      <span style={{ backgroundColor: \"gray\" }} />\n                      Flood History\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n","module.exports = require(\"next/dynamic\");","module.exports = require(\"next/link\");","module.exports = require(\"react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxFA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAZA;AAFA;AAgBA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AAEA;;;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAHA;AARA;AAgBA;AACA;AAAA;AACA;AAqHA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAPA;AAcA;AACA;AAAA;AACA;AAwJA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAEA;AAHA;AAPA;AAcA;AACA;AAgqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;AApsBA;AACA;AAssBA;;;;;;;;;;;;;;;;;;;;;;;AC3sBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}